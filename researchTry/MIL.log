pnlAddPane();
nil
1
designOpen("c:\\users\\timer\\documents\\github\\hspice\\researchtry\\researchtry3.sp");
"D0"
t
pnlAddCurve(1, node(D0,"A0","vm(inx)","S-1"), node(D0,"A0","HERTZ"));
nil
pnlAddPane();
nil
nil
2
pnlUnselectPane(2, 0);
nil
pnlSelectPane(1);
nil
pnlAddCurve(1, node(D0,"A0","p(inx)","S-1"), node(D0,"A0","HERTZ"));
nil
pnlUnselectPane(1, 0);
nil
pnlSelectPane(1);
nil
pnlUnselectPane(1, 0);
nil
pnlSelectPane(1);
nil
pnlUnselectPane(1, 0);
nil
pnlSelectPane(2);
nil
updateAll();
t
pnlUnselectPane(2, 0);
nil
pnlSelectPane(2);
nil
updateAll();
t
pnlUnselectPane(2, 0);
nil
pnlSelectPane(1);
nil
updateAll();
t
pnlUnselectPane(1, 0);
nil
pnlSelectPane(1);
nil
updateAll();
t
pnlUnselectPane(1, 0);
nil
pnlSelectPane(1);
nil
updateAll();
t
pnlUnselectPane(1, 0);
nil
pnlSelectPane(1);
nil
updateAll();
t
pnlUnselectPane(1, 0);
nil
pnlSelectPane(2);
nil
pnlAddCurve(2, node(D0,"A0","vm(vg)","S-1"), node(D0,"A0","HERTZ"));
nil
pnlDelCurve(2, node(D0,"A0","vm(vg)","S-1"), node(D0,"A0","HERTZ"));
nil
pnlUnselectPane(2, 0);
nil
pnlSelectPane(2);
nil
updateAll();
t
pnlAddCurve(2, node(D0,"A0","vdb(vg)"), node(D0,"A0","HERTZ"));
nil
pnlAddCurve(2, node(D0,"A0","p(vg)","S-1"), node(D0,"A0","HERTZ"));
nil
pnlUnselectPane(2, 0);
nil
pnlSelectPane(2);
nil
pnlUnselectPane(2, 0);
nil
pnlSelectPane(2);
nil
updateAll();
t
pnlUnselectPane(2, 0);
nil
pnlSelectPane(2);
nil
updateAll();
t
pnlUnselectPane(2, 0);
nil
pnlSelectPane(1);
nil
pnlDelCurve(1, node(D0,"A0","vm(inx)","S-1"), node(D0,"A0","HERTZ"));
nil
pnlAddCurve(1, node(D0,"A0","vdb(inx)"), node(D0,"A0","HERTZ"));
nil
pnlAddPane();
nil
nil
3
pnlAddCurve(3, node(D0,"A0","im(v00)","S-1"), node(D0,"A0","HERTZ"));
nil
pnlAddCurve(3, node(D0,"A0","ip(v00)","S-1"), node(D0,"A0","HERTZ"));
nil
pnlUnselectPane(3, 0);
nil
pnlSelectPane(3);
nil
pnlUnselectPane(3, 0);
nil
pnlSelectPane(1);
nil
pnlUnselectPane(1, 0);
nil
pnlSelectPane(2);
nil
pnlUnselectPane(2, 0);
nil
pnlSelectPane(3);
nil
pnlDeletePane(3, 1);
nil
nil
nil
pnlDeletePane(2, 1);
nil
nil
pnlDeletePane(1, 1);
nil
nil
