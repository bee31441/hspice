pnlAddPane();
nil
1
designOpen("c:\\users\\timer\\documents\\github\\hspice\\researchtry\\researchtry.sp");
"D0"
t
pnlUnselectPane(1, 0);
nil
pnlSelectPane(1);
nil
updateAll();
t
pnlAddCurve(1, node(D0,"A1","i(m1)"), node(D0,"A1","VOLTS"));
nil
pnlAddCurve(1, node(D0,"A1","i(m2)"), node(D0,"A1","VOLTS"));
nil
pnlDelCurve(1, node(D0,"A1","i(m2)"), node(D0,"A1","VOLTS"));
nil
pnlUnselectPane(1, 0);
nil
pnlSelectPane(1);
nil
updateAll();
t
pnlUnselectPane(1, 0);
nil
pnlSelectPane(1);
nil
updateAll();
t
quit();
exit
pnlDeletePane(1, 1);
nil
nil
;
nil
updateAll();
t
pnlUnselectPane(1, 0);
nil
pnlSelectPane(1);
nil
pnlUnselectPane(1, 0);
nil
pnlSelectPane(1);
nil
pnlUnselectPane(1, 0);
nil
pnlSelectPane(1);
nil
pnlUnselectPane(1, 0);
nil
pnlSelectPane(1);
nil
updateAll();
t
pnlAddPane();
nil
nil
2
pnlUnselectPane(2, 0);
nil
pnlSelectPane(2);
nil
pnlAddCurve(2, node(D0,"A0","v(2)"), node(D0,"A0","TIME"));
nil
pnlAddCurve(2, node(D0,"A0","v(1)"), node(D0,"A0","TIME"));
nil
pnlAddCurve(2, node(D0,"A0","v(3)"), node(D0,"A0","TIME"));
nil
pnlUnselectPane(2, 0);
nil
pnlSelectPane(2);
nil
updateAll();
t
pnlDelCurve(2, node(D0,"A0","v(3)"), node(D0,"A0","TIME"));
nil
pnlDelCurve(2, node(D0,"A0","v(2)"), node(D0,"A0","TIME"));
nil
pnlAddCurve(2, node(D0,"A0","v(3)"), node(D0,"A0","TIME"));
nil
pnlUnselectPane(2, 0);
nil
pnlSelectPane(2);
nil
pnlAddCurve(2, node(D0,"A0","v(vto)"), node(D0,"A0","TIME"));
nil
pnlAddPane();
nil
nil
3
pnlAddCurve(3, node(D0,"A0","v(vo)"), node(D0,"A0","TIME"));
nil
pnlAddCurve(3, node(D0,"A0","v(vcin)"), node(D0,"A0","TIME"));
nil
pnlUnselectPane(3, 0);
nil
pnlSelectPane(3);
nil
pnlUnselectPane(3, 0);
nil
pnlSelectPane(2);
nil
updateAll();
t
pnlUnselectPane(2, 0);
nil
pnlSelectPane(1);
nil
pnlUnselectPane(1, 0);
nil
pnlSelectPane(3);
nil
pnlDelCurve(3, node(D0,"A0","v(vcin)"), node(D0,"A0","TIME"));
nil
pnlDelCurve(3, node(D0,"A0","v(vo)"), node(D0,"A0","TIME"));
nil
pnlAddCurve(3, node(D0,"A0","i(m6)"), node(D0,"A0","TIME"));
nil
pnlUnselectPane(3, 0);
nil
pnlSelectPane(3);
nil
pnlUnselectPane(3, 0);
nil
pnlSelectPane(2);
nil
pnlUnselectPane(2, 0);
nil
pnlSelectPane(2);
nil
updateAll();
t
pnlUnselectPane(2, 0);
nil
pnlSelectPane(1);
nil
updateAll();
t
pnlUnselectPane(1, 0);
nil
pnlSelectPane(1);
nil
updateAll();
t
pnlAddCurve(1, node(D0,"A0","v(vin)"), node(D0,"A0","TIME"));
nil
pnlUnselectPane(1, 0);
nil
pnlSelectPane(1);
nil
pnlDelCurve(1, node(D0,"A0","v(vin)"), node(D0,"A0","TIME"));
nil
pnlUnselectPane(1, 0);
nil
pnlSelectPane(2);
nil
pnlDeletePane(2, 0);
nil
nil
pnlSelectPane(1);
nil
pnlAddPane();
nil
nil
3
pnlAddCurve(3, node(D0,"A0","v(vin)"), node(D0,"A0","TIME"));
nil
updateAll();
t
pnlUnselectPane(3, 0);
nil
pnlSelectPane(2);
nil
updateAll();
t
pnlUnselectPane(2, 0);
nil
pnlSelectPane(2);
nil
updateAll();
t
pnlUnselectPane(2, 0);
nil
pnlSelectPane(2);
nil
updateAll();
t
pnlUnselectPane(2, 0);
nil
pnlSelectPane(2);
nil
updateAll();
t
pnlUnselectPane(2, 0);
nil
pnlSelectPane(2);
nil
updateAll();
t
pnlUnselectPane(2, 0);
nil
pnlSelectPane(3);
nil
updateAll();
t
pnlUnselectPane(3, 0);
nil
pnlSelectPane(3);
nil
updateAll();
t
pnlUnselectPane(3, 0);
nil
pnlSelectPane(1);
nil
pnlUnselectPane(1, 0);
nil
pnlSelectPane(2);
nil
updateAll();
t
pnlUnselectPane(2, 0);
nil
pnlSelectPane(3);
nil
updateAll();
t
pnlUnselectPane(3, 0);
nil
pnlSelectPane(3);
nil
updateAll();
t
pnlUnselectPane(3, 0);
nil
pnlSelectPane(3);
nil
updateAll();
t
pnlUnselectPane(3, 0);
nil
pnlSelectPane(3);
nil
updateAll();
t
pnlUnselectPane(3, 0);
nil
pnlSelectPane(3);
nil
updateAll();
t
pnlUnselectPane(3, 0);
nil
pnlSelectPane(1);
nil
pnlAddCurve(1, node(D0,"A0","v(vin)"), node(D0,"A0","TIME"));
nil
pnlUnselectPane(1, 0);
nil
pnlSelectPane(2);
nil
pnlHidePane(2, 0);
nil
pnlSelectPane(1);
nil
pnlUnselectPane(1, 0);
nil
pnlSelectPane(3);
nil
pnlHidePane(3, 0);
nil
pnlSelectPane(1);
nil
pnlShowPane(2, 1);
nil
pnlShowPane(3, 1);
nil
pnlDelCurve(1, node(D0,"A0","v(vin)"), node(D0,"A0","TIME"));
nil
quit();
exit
pnlDeletePane(3, 1);
nil
nil
pnlDeletePane(2, 1);
nil
nil
pnlDeletePane(1, 1);
nil
nil
